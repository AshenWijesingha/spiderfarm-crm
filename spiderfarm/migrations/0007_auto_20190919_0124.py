# Generated by Django 2.2.3 on 2019-09-19 08:24

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('spiderfarm', '0006_auto_20190907_1429'),
    ]

    operations = [
        migrations.CreateModel(
            name='WebAppTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Web App Signature',
                'verbose_name_plural': 'Web App Signatures',
            },
        ),
        migrations.CreateModel(
            name='WebServerTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Web server software',
            },
        ),
        migrations.CreateModel(
            name='XPoweredByTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'X-Powered-By header',
                'verbose_name_plural': 'X-Powered-By headers',
            },
        ),
        migrations.RemoveField(
            model_name='domain',
            name='mx_servers',
        ),
        migrations.AddField(
            model_name='domain',
            name='mx_servers',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='spiderfarm.TaggedMxServers', to='spiderfarm.MxServerTag', verbose_name='MX servers'),
        ),
        migrations.RemoveField(
            model_name='domain',
            name='server_type',
        ),
        migrations.CreateModel(
            name='TaggedXPoweredByHeaders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spiderfarm_taggedxpoweredbyheaders_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='domain_x_powered_by', to='spiderfarm.XPoweredByTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedWebServers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spiderfarm_taggedwebservers_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='domain_web_server', to='spiderfarm.WebServerTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggedWebAppSignatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spiderfarm_taggedwebappsignatures_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='domain_web_app_tags', to='spiderfarm.WebAppTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='domain',
            name='software_tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='spiderfarm.TaggedWebAppSignatures', to='spiderfarm.WebAppTag', verbose_name='Web app tags'),
        ),
        migrations.AddField(
            model_name='domain',
            name='x_powered_by',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='spiderfarm.TaggedXPoweredByHeaders', to='spiderfarm.XPoweredByTag', verbose_name='X-Powered-By Headers'),
        ),
        migrations.AddField(
            model_name='domain',
            name='server_type',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='spiderfarm.TaggedWebServers', to='spiderfarm.WebServerTag', verbose_name='Server software'),
        ),
    ]
