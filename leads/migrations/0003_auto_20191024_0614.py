# Generated by Django 2.2.3 on 2019-10-24 13:14

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('leads', '0002_remove_lead_quality'),
    ]

    operations = [
        migrations.CreateModel(
            name='LeadTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Lead Tag',
                'verbose_name_plural': 'Lead Tags',
            },
        ),
        migrations.AlterField(
            model_name='lead',
            name='status',
            field=models.CharField(blank=True, choices=[('IMPORTED', 'Imported'), ('ACTIVE', 'Active'), ('REVIEW', 'Review'), ('REVIEW', 'Stalled'), ('SOLD', 'Sold'), ('RENEW', 'Renewed'), ('DEAD', 'Dead'), ('CLOSED', 'Closed')], default='IMPORTED', max_length=255, null=True, verbose_name='Status of Lead'),
        ),
        migrations.CreateModel(
            name='TaggedLeads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='Object id')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads_taggedleads_tagged_items', to='contenttypes.ContentType', verbose_name='Content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lead_tag', to='leads.LeadTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='lead',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='leads.TaggedLeads', to='leads.LeadTag', verbose_name='Hosting tags'),
        ),
    ]
